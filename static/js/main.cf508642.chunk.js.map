{"version":3,"sources":["components/tableRow/TableRow.styles.module.css","components/masterMind/MasterMind.styles.module.css","components/pegButton/PegButton.styles.module.css","components/win/Win.styles.module.css","components/lose/Lose.styles.module.css","components/table/Table.styles.module.css","components/pegBox/PegBox.styles.module.css","services/utils.ts","services/masterMindLogic.ts","services/constants.ts","components/tableRow/TableRow.tsx","components/table/Table.tsx","components/pegButton/PegButton.tsx","components/pegBox/PegBox.tsx","assets/win.jpg","components/win/Win.tsx","assets/lose.png","components/lose/Lose.tsx","components/masterMind/MasterMind.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","createFillArrayFromNumberLength","length","cb","array","i","push","feedback","COLORS","GenerateCode","codeLength","index","min","max","Math","floor","random","TableRow","actualGuest","actualHints","previousGuest","previousHint","hide","row","styles","codeRow","pegContainer","feedbackContainer","feedbackPegContainer","feedbackPeg","peg","black","white","hidden","console","log","undefined","className","feedbackCondition","style","backgroundColor","Table","rowsLength","guestNumber","previousGuests","previousHints","tableRef","useRef","useEffect","current","scrollTop","scrollHeight","rows","actualRowIndex","reverseIndex","getRowsHTML","container","ref","PegButton","color","onClick","useState","clicked","setClicked","useContext","GameContext","pegClicked","boxShadow","onAnimationEnd","PegBox","pegButtonClicked","pegBox","pegButtonClickedHandler","Win","img","src","winImage","Lose","loseImage","gameContextDefaultValue","actualCode","previousCodes","React","createContext","MasterMind","setActualGuest","codeToGuest","setGuestNumber","setActualHints","setPreviousGuests","setPreviousHints","showWin","setShowWin","showLose","setShowLose","generalContainer","tableContainer","pegBoxContainer","buttonsContainer","button","playableContainer","textContainer","target","href","localActualGuest","hints","guest","code","map","some","guestColor","GetHints","hint","every","feedbackVal","isWin","nextTry","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,IAAM,6BAA6B,OAAS,gCAAgC,QAAU,iCAAiC,aAAe,sCAAsC,kBAAoB,2CAA2C,qBAAuB,8CAA8C,YAAc,qCAAqC,IAAM,6BAA6B,MAAQ,+BAA+B,MAAQ,iC,gBCAvcD,EAAOC,QAAU,CAAC,iBAAmB,4CAA4C,UAAY,qCAAqC,eAAiB,0CAA0C,gBAAkB,2CAA2C,iBAAmB,4CAA4C,OAAS,kCAAkC,kBAAoB,6CAA6C,cAAgB,2C,oBCArbD,EAAOC,QAAU,CAAC,IAAM,8BAA8B,WAAa,qCAAqC,MAAQ,kC,gBCAhHD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,IAAM,0B,gBCAtGD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,OAAS,4BAA4B,IAAM,2B,iBCAxGD,EAAOC,QAAU,CAAC,UAAY,kC,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,gC,+KCDpB,SAASC,EAAmCC,EAAgBC,GAGjE,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BD,EAAME,KAAKH,EAAGE,IAGhB,OAAOD,E,ICJGG,E,gBCKCC,EAAS,CARH,SACG,SACD,SACD,SACE,SACA,SACC,UDMhB,SAASC,EAAaC,GAK3B,OAJaT,EAAgCS,GAAY,SAACC,GACxD,OAAOH,GDJgBI,ECIEF,EDJWG,ECIC,EDH/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,IAD7C,IAAoBA,EAAaC,M,SCP5BN,O,iBAAAA,I,kBAAAA,M,gBE0FGU,EAhF4B,SAAC,GAOrC,IANLP,EAMI,EANJA,WACAQ,EAKI,EALJA,YACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,KAGEC,EAUEC,IAVFD,IACAE,EASED,IATFC,QACAC,EAQEF,IARFE,aACAC,EAOEH,IAPFG,kBACAC,EAMEJ,IANFI,qBACAC,EAKEL,IALFK,YACAC,EAIEN,IAJFM,IACAC,EAGEP,IAHFO,MACAC,EAEER,IAFFQ,MACAC,EACET,IADFS,OAGF,OADAC,QAAQC,IAAIjB,OAA4BkB,GAAflB,GAEvB,sBAAKmB,UAAS,UAAKd,GAAL,OAAWD,EAAI,WAAOW,GAAW,IAA/C,UACE,qBAAKI,UAAS,UAAKV,GAAnB,SACG1B,EAAgCS,GAAY,SAAAC,GAC3C,IAAI2B,EAmBJ,OAjBEA,EADEjB,EACkBA,EAChBA,EAAaV,KAAWJ,EAASwB,MAAjC,WACMA,GACJV,EAAaV,KAAWJ,EAASyB,MAAjC,WACIA,GACJ,GACF,GAEgBb,EAChBA,EAAYR,KAAWJ,EAASwB,MAAhC,WACMA,GACJZ,EAAYR,KAAWJ,EAASyB,MAAhC,WACIA,GACJ,GACF,GAIJ,qBAAiBK,UAAS,UAAKT,GAA/B,SACE,qBAAKS,UAAS,UAAKR,GAAL,OAAmBS,MADzB3B,QAMhB,qBAAK0B,UAAS,UAAKZ,GAAnB,SACGxB,EAAgCS,GAAY,SAAAC,GAC3C,OACE,qBAAiB0B,UAAS,UAAKX,GAA/B,SACGN,EACC,qBACEiB,UAAS,UAAKP,GACdS,MAAO,CACLC,gBAAgB,IAAD,OAAMpB,EAAcT,YAGtByB,GAAflB,EACF,qBACEmB,UAAS,UAAKP,GACdS,MAAO,CACLC,gBAAgB,IAAD,OAAMtB,EAAYP,OAIrC,IAhBMA,YCgBP8B,EA3DyB,SAAC,GAQlC,IAPL/B,EAOI,EAPJA,WACAgC,EAMI,EANJA,WACAxB,EAKI,EALJA,YACAyB,EAII,EAJJA,YACAxB,EAGI,EAHJA,YACAyB,EAEI,EAFJA,eACAC,EACI,EADJA,cAEAX,QAAQC,IAAIjB,GACZ,IAAM4B,EAAWC,iBAAuB,MAExCC,qBAAU,WACJL,GAAe,GAAKG,GAAYA,EAASG,UAC3CH,EAASG,QAAQC,WAzBF,OA2BhB,CAACP,IAEJK,qBAAU,WACJF,GAAYA,EAASG,UACvBH,EAASG,QAAQC,UAAYJ,EAASG,QAAQE,gBAE/C,IACH,IA0BMC,EA1Bc,WAClB,IAAMC,EAAiBX,EAAaC,EAAc,EAsBlD,OArBa1C,EAAgCyC,GAAY,SAAA/B,GACvD,IAAM2C,EAAeZ,EAAa/B,EAAQ,EAC1C,OAAO0C,IAAmB1C,EACxB,cAAC,EAAD,CACED,WAAYA,EAEZQ,YAAaA,EACbC,YAAaA,GAFRR,QAI4ByB,IAAjCQ,EAAeU,GACjB,cAAC,EAAD,CACE5C,WAAYA,EAEZU,cAAewB,EAAeU,GAC9BjC,aAAcwB,EAAcS,IAFvB3C,GAKP,cAAC,EAAD,CAAUD,WAAYA,EAAwBY,MAAM,GAAbX,MAOhC4C,GAENC,EAAahC,IAAbgC,UACP,OACE,qBAAKnB,UAAS,UAAKmB,GAAaC,IAAKX,EAArC,SACGM,K,gBCjDQM,EAnB6B,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAAa,EAClCC,oBAAS,GADyB,mBACzDC,EADyD,KAChDC,EADgD,KAQzDjC,GANYkC,qBAAWC,GAMJzC,IAAnBM,KAAKoC,EAAc1C,IAAd0C,WACZ,OACE,qBACE7B,UAAS,UAAKP,GAAL,OAAWgC,EAAO,WAAOI,GAAe,IACjD3B,MAAO,CAACC,gBAAgB,IAAD,OAAMmB,GAASQ,UAAU,oBAAD,OAAsBR,IACrEC,QAVmB,WACrBG,GAAW,GACXH,EAAQD,IASNS,eAAgB,kBAAML,GAAW,O,iBCMxBM,EApB0B,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBAClCC,EAAU/C,IAAV+C,OACDC,EAA0B,SAACb,GAC/BW,EAAiBX,IAEnB,OACE,qBAAKtB,UAAS,UAAKkC,GAAnB,SACGtE,EAXe,GAWgC,SAAAU,GAC9C,OACE,cAAC,EAAD,CAEEgD,MAAOnD,EAAOG,GACdiD,QAASY,GAFJ7D,S,iBCpBF,MAA0B,gCCY1B8D,EATH,WAAO,IACVjB,EAAkBhC,IAAlBgC,UAAWkB,EAAOlD,IAAPkD,IAClB,OACE,qBAAKrC,UAAS,UAAKmB,GAAnB,SACE,qBAAKnB,UAAS,UAAKqC,GAAOC,IAAKC,O,iBCPtB,MAA0B,iCCY1BC,EATF,WAAO,IACXrB,EAAkBhC,IAAlBgC,UAAWkB,EAAOlD,IAAPkD,IAClB,OACE,qBAAKrC,UAAS,UAAKmB,GAAnB,SACE,qBAAKnB,UAAS,UAAKqC,GAAOC,IAAKG,OCY/BC,EAA0B,CAC9BC,WAAY,GACZC,cAAe,IAGJhB,EAAciB,IAAMC,cAC/BJ,GAqHaK,EA7G8B,SAAC,GAA8B,IAA7B1E,EAA4B,EAA5BA,WAAYgC,EAAgB,EAAhBA,WAAgB,EAC3BmB,mBAC5CkB,GAFuE,gCAIrClB,mBAAmB,KAJkB,mBAIpE3C,EAJoE,KAIvDmE,EAJuD,OAKrCxB,mBAASpD,EAAaC,IALe,mBAKpE4E,EALoE,aAMrCzB,mBAAS,IAN4B,mBAMpElB,EANoE,KAMvD4C,EANuD,OAOrC1B,mBAAqB,IAPgB,mBAOpE1C,EAPoE,KAOvDqE,EAPuD,OAQ/B3B,mBAAqB,IARU,mBAQpEjB,EARoE,KAQpD6C,EARoD,OASjC5B,mBAAuB,IATU,mBASpEhB,EAToE,KASrD6C,EATqD,OAU7C7B,oBAAS,GAVoC,mBAUpE8B,EAVoE,KAU3DC,EAV2D,OAW3C/B,oBAAS,GAXkC,mBAWpEgC,EAXoE,KAW1DC,EAX0D,KAuDvEC,EAQEvE,IARFuE,iBACAvC,EAOEhC,IAPFgC,UACAwC,EAMExE,IANFwE,eACAC,EAKEzE,IALFyE,gBACAC,EAIE1E,IAJF0E,iBACAC,EAGE3E,IAHF2E,OACAC,GAEE5E,IAFF4E,kBACAC,GACE7E,IADF6E,cAEF,OACE,qCACE,sBAAKhE,UAAWgE,GAAhB,UACE,4CACA,uEACyC,IACvC,mBAAGC,OAAO,QAAQC,KAAK,yBAAvB,6BAEK,IAJP,iDAQF,sBAAKlE,UAAS,UAAK0D,GAAnB,UACE,sBAAK1D,UAAS,UAAK+D,IAAnB,UACE,qBAAK/D,UAAS,UAAKmB,EAAL,YAAkBwC,GAAhC,SACE,cAAC,EAAD,CACEtF,WAAYA,EACZgC,WAAYA,EACZC,YAAaA,EACbzB,YAAaA,EACbC,YAAaA,EACbyB,eAAgBA,EAChBC,cAAeA,MAGnB,qBAAKR,UAAS,UAAKmB,EAAL,YAAkByC,GAAhC,SACE,cAAC,EAAD,CAAQ3B,iBA7Ec,SAACX,GAC/B,IAAI6C,EAAgB,YAAOtF,GACvBsF,EAAiBtG,SAAWQ,EAC9B8F,EAAiB9F,EAAa,GAAKiD,EAEnC6C,EAAiBlG,KAAKqD,GAExB0B,EAAemB,WAyEX,qBAAKnE,UAAS,UAAK6D,GAAnB,SACE,wBACEtC,QAxDkB,WAC1B,IAAM6C,EVrDH,SAAkBC,EAAaC,GACpC,IAAMF,EAAoB,GAS1B,OAPAE,EAAKC,KAAI,SAACjD,EAAOhD,GACZ+F,EAAM/F,KAAWgD,EAClB8C,EAAMnG,KAAKC,EAASwB,OACb2E,EAAMG,MAAK,SAACC,GAAD,OAAgBA,IAAenD,MACjD8C,EAAMnG,KAAKC,EAASyB,UAGjByE,EU2CSM,CAAS7F,EAAaoE,GACpCE,EAAeiB,GVzCZ,SAAeO,EAAkBtG,GACtC,OAAOsG,EAAK9G,SAAWQ,GAAcsG,EAAKC,OAAM,SAAAC,GAAW,OAAIA,IAAgB3G,EAASwB,SUyClFoF,CAAMV,EAAO/F,GAlBjBkF,GAAW,GAqBAjD,IAAgBD,EAAa,EATxCoD,GAAY,GATE,SAACW,GACfhB,EAAkB,GAAD,mBAAK7C,GAAL,CAAqB1B,KACtCwE,EAAiB,GAAD,mBAAK7C,GAAL,CAAoB4D,KACpCpB,EAAe,IACfG,EAAe,IACfD,EAAe5C,EAAc,GAkB3ByE,CAAQX,IA8CFY,SAAUnG,EAAYhB,SAAWQ,EACjC2B,UAAS,UAAK8D,GAHhB,wBASHR,GAAW,cAAC,EAAD,IACXE,GAAY,cAAC,EAAD,QC1HJyB,MARf,WACE,OACE,qBAAKjF,UAAU,MAAf,SACE,cAAC,EAAD,CAAY3B,WANC,EAMuBgC,WALvB,QCSJ6E,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf508642.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TableRow_styles_row__TGQu8\",\"hidden\":\"TableRow_styles_hidden__7ILEz\",\"codeRow\":\"TableRow_styles_codeRow___G9ps\",\"pegContainer\":\"TableRow_styles_pegContainer__m7qQc\",\"feedbackContainer\":\"TableRow_styles_feedbackContainer__2ikxp\",\"feedbackPegContainer\":\"TableRow_styles_feedbackPegContainer__3nVrj\",\"feedbackPeg\":\"TableRow_styles_feedbackPeg__FIcgH\",\"peg\":\"TableRow_styles_peg__3LD_Y\",\"black\":\"TableRow_styles_black__Hqlb8\",\"white\":\"TableRow_styles_white__1FmFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generalContainer\":\"MasterMind_styles_generalContainer__MNKdq\",\"container\":\"MasterMind_styles_container__2hBf8\",\"tableContainer\":\"MasterMind_styles_tableContainer__2Il6M\",\"pegBoxContainer\":\"MasterMind_styles_pegBoxContainer__3RVER\",\"buttonsContainer\":\"MasterMind_styles_buttonsContainer__2v5yX\",\"button\":\"MasterMind_styles_button__2AQTN\",\"playableContainer\":\"MasterMind_styles_playableContainer__3X_5z\",\"textContainer\":\"MasterMind_styles_textContainer__1kmdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peg\":\"PegButton_styles_peg__3UYgJ\",\"pegClicked\":\"PegButton_styles_pegClicked__2Beft\",\"click\":\"PegButton_styles_click__rON51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Win_styles_container__GVPqY\",\"appear\":\"Win_styles_appear__2c6o7\",\"img\":\"Win_styles_img__2-jiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Lose_styles_container__1Odsw\",\"appear\":\"Lose_styles_appear__3mrT5\",\"img\":\"Lose_styles_img__1DfSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_styles_container__37mNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pegBox\":\"PegBox_styles_pegBox__p45Oq\"};","export function createFillArrayFromNumberLength<T>(length: number, cb: (index: number) => T | any) {\n\n  let array = []\n  for (let i = 0; i < length; i++) {\n    array.push(cb(i))\n  }\n\n  return array;\n}\n\nexport function randNumber(min: number, max: number) {\n  return (Math.floor(Math.random() * (max - min)) + min)\n}","import { COLORS } from './constants'\nimport { createFillArrayFromNumberLength, randNumber } from './utils'\n\nexport enum feedback {\n  black,\n  white\n}\n\nexport type Peg = string\n\nexport type Code = Peg[]\n\nexport function GenerateCode(codeLength: number): Code {\n  const code = createFillArrayFromNumberLength(codeLength, (index) => {\n    return COLORS[randNumber(codeLength, 0)]\n  })\n\n  return code;\n}\n\nexport function GetHints(guest: Code, code: Code): feedback[] {\n  const hints: feedback[] = []\n\n  code.map((color, index) => {\n    if(guest[index] === color) {\n      hints.push(feedback.black)\n    }else if(guest.some((guestColor) => guestColor === color)) {\n      hints.push(feedback.white)\n    }\n  })\n  return hints\n}\n\nexport function isWin(hint: feedback[], codeLength: number):boolean {\n  return hint.length === codeLength && hint.every(feedbackVal => feedbackVal === feedback.black)\n}","export const RED = \"ff9aa2\"\nexport const ORANGE = \"ffdac1\"\nexport const GREEN = \"aff8db\"\nexport const BLUE = \"6eb5ff\"\nexport const YELLOW = \"ffffd1\"\nexport const PURPLE = \"b28dff\"\nexport const FUCHSIA = \"ff9cee\"\n\nexport const COLORS = [RED, ORANGE, GREEN, BLUE, YELLOW, PURPLE, FUCHSIA]","import {FunctionComponent} from \"react\";\nimport styles from \"./TableRow.styles.module.css\";\nimport {createFillArrayFromNumberLength} from \"../../services/utils\";\nimport {feedback} from \"../../services/masterMindLogic\";\n\ninterface props {\n  codeLength: number;\n  actualGuest?: string[];\n  actualHints?: feedback[];\n  previousGuest?: string[];\n  previousHint?: feedback[];\n  hide?: boolean;\n}\nconst TableRow: FunctionComponent<props> = ({\n  codeLength,\n  actualGuest,\n  actualHints,\n  previousGuest,\n  previousHint,\n  hide,\n}) => {\n  const {\n    row,\n    codeRow,\n    pegContainer,\n    feedbackContainer,\n    feedbackPegContainer,\n    feedbackPeg,\n    peg,\n    black,\n    white,\n    hidden,\n  } = styles;\n  console.log(actualGuest, actualGuest != undefined);\n  return (\n    <div className={`${row}${hide ? ` ${hidden}` : \"\"}`}>\n      <div className={`${feedbackContainer}`}>\n        {createFillArrayFromNumberLength(codeLength, index => {\n          let feedbackCondition;\n          if (previousHint) {\n            feedbackCondition = previousHint\n              ? previousHint[index] === feedback.black\n                ? ` ${black}`\n                : previousHint[index] === feedback.white\n                ? ` ${white}`\n                : \"\"\n              : \"\";\n          } else {\n            feedbackCondition = actualHints\n              ? actualHints[index] === feedback.black\n                ? ` ${black}`\n                : actualHints[index] === feedback.white\n                ? ` ${white}`\n                : \"\"\n              : \"\";\n          }\n\n          return (\n            <div key={index} className={`${feedbackPegContainer}`}>\n              <div className={`${feedbackPeg}${feedbackCondition}`}></div>\n            </div>\n          );\n        })}\n      </div>\n      <div className={`${codeRow}`}>\n        {createFillArrayFromNumberLength(codeLength, index => {\n          return (\n            <div key={index} className={`${pegContainer}`}>\n              {previousGuest ? (\n                <div\n                  className={`${peg}`}\n                  style={{\n                    backgroundColor: `#${previousGuest[index]}`,\n                  }}\n                ></div>\n              ) : actualGuest != undefined ? (\n                <div\n                  className={`${peg}`}\n                  style={{\n                    backgroundColor: `#${actualGuest[index]}`,\n                  }}\n                ></div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default TableRow;\n","import {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport styles from \"./Table.styles.module.css\";\n\nimport {createFillArrayFromNumberLength} from \"../../services/utils\";\nimport TableRow from \"../tableRow/TableRow\";\nimport {feedback} from \"../../services/masterMindLogic\";\n\nconst scrollAmount = 140\n\ninterface props {\n  codeLength: number;\n  rowsLength: number;\n  actualGuest: string[];\n  guestNumber: number;\n  actualHints: feedback[];\n  previousGuests: string[][];\n  previousHints: feedback[][];\n}\nconst Table: FunctionComponent<props> = ({\n  codeLength,\n  rowsLength,\n  actualGuest,\n  guestNumber,\n  actualHints,\n  previousGuests,\n  previousHints,\n}) => {\n  console.log(actualGuest)\n  const tableRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (guestNumber >= 3 && tableRef && tableRef.current) {\n      tableRef.current.scrollTop -= scrollAmount\n    }\n  }, [guestNumber]);\n\n  useEffect(() => {\n    if (tableRef && tableRef.current) {\n      tableRef.current.scrollTop = tableRef.current.scrollHeight;\n    }\n  }, []);\n  const getRowsHTML = () => {\n    const actualRowIndex = rowsLength - guestNumber - 1;\n    const rows = createFillArrayFromNumberLength(rowsLength, index => {\n      const reverseIndex = rowsLength - index - 1;\n      return actualRowIndex === index ? (\n        <TableRow\n          codeLength={codeLength}\n          key={index}\n          actualGuest={actualGuest}\n          actualHints={actualHints}\n        />\n      ) : previousGuests[reverseIndex] !== undefined ? (\n        <TableRow\n          codeLength={codeLength}\n          key={index}\n          previousGuest={previousGuests[reverseIndex]}\n          previousHint={previousHints[reverseIndex]}\n        />\n      ) : (\n        <TableRow codeLength={codeLength} key={index} hide={true} />\n      );\n    });\n\n    return rows;\n  };\n\n  const rows = getRowsHTML();\n\n  const {container} = styles;\n  return (\n    <div className={`${container}`} ref={tableRef}>\n      {rows}\n    </div>\n  );\n};\n\nexport default Table;\n","import {FunctionComponent, useState, useContext} from \"react\";\nimport styles from \"./PegButton.styles.module.css\";\n\nimport {GameContext} from \"../masterMind/MasterMind\";\n\ninterface props {\n  color: string;\n  onClick: (color: string) => void;\n}\n\nconst PegButton: FunctionComponent<props> = ({color, onClick}) => {\n  const [clicked, setClicked] = useState(false);\n  const gameStatus = useContext(GameContext);\n  const onClickHandler = () => {\n    setClicked(true);\n    onClick(color);\n  };\n\n  const {peg, pegClicked} = styles;\n  return (\n    <div\n      className={`${peg}${clicked ? ` ${pegClicked}` : ''}`}\n      style={{backgroundColor: `#${color}`, boxShadow: `0px 0px 8px 1px #${color}`}}\n      onClick={onClickHandler}\n      onAnimationEnd={() => setClicked(false)}\n    ></div>\n  );\n};\n\nexport default PegButton;\n","import PegButton from \"../pegButton/PegButton\";\nimport {COLORS} from \"../../services/constants\";\nimport styles from \"./PegBox.styles.module.css\";\nimport {createFillArrayFromNumberLength} from \"../../services/utils\";\nimport {FunctionComponent} from \"react\";\n\nconst buttonsLength = 7;\ninterface props {\n  pegButtonClicked: (color: string) => void;\n}\nconst PegBox: FunctionComponent<props> = ({pegButtonClicked}) => {\n  const {pegBox} = styles;\n  const pegButtonClickedHandler = (color: string) => {\n    pegButtonClicked(color);\n  };\n  return (\n    <div className={`${pegBox}`}>\n      {createFillArrayFromNumberLength(buttonsLength, index => {\n        return (\n          <PegButton\n            key={index}\n            color={COLORS[index]}\n            onClick={pegButtonClickedHandler}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PegBox;\n","export default __webpack_public_path__ + \"static/media/win.69ba92de.jpg\";","import styles from './Win.styles.module.css'\nimport winImage from '../../assets/win.jpg'\n\nconst Win = () => {\n  const {container, img} = styles\n  return (\n    <div className={`${container}`}>\n      <img className={`${img}`} src={winImage}/>\n    </div>\n  )\n}\n\nexport default Win","export default __webpack_public_path__ + \"static/media/lose.13fcd0a4.png\";","import styles from './Lose.styles.module.css'\nimport loseImage from '../../assets/lose.png'\n\nconst Lose = () => {\n  const {container, img} = styles\n  return (\n    <div className={`${container}`}>\n      <img className={`${img}`} src={loseImage}/>\n    </div>\n  )\n}\n\nexport default Lose","import React, {useState, useEffect, FunctionComponent} from \"react\";\nimport styles from \"./MasterMind.styles.module.css\";\n\nimport Table from \"../table/Table\";\nimport PegBox from \"../pegBox/PegBox\";\nimport {\n  feedback,\n  GenerateCode,\n  GetHints,\n  isWin,\n} from \"../../services/masterMindLogic\";\nimport Win from \"../win/Win\";\nimport Lose from \"../lose/Lose\";\n\ninterface gameContext {\n  actualCode: string[];\n  previousCodes: string[][];\n}\n\nconst gameContextDefaultValue = {\n  actualCode: [],\n  previousCodes: [],\n};\n\nexport const GameContext = React.createContext<gameContext>(\n  gameContextDefaultValue\n);\n\ninterface props {\n  codeLength: number;\n  rowsLength: number;\n}\n\nconst MasterMind: FunctionComponent<props> = ({codeLength, rowsLength}) => {\n  let [gameContextState, setGameContextState] = useState(\n    gameContextDefaultValue\n  );\n  let [actualGuest, setActualGuest] = useState<string[]>([]);\n  let [codeToGuest, setCodeToGuest] = useState(GenerateCode(codeLength));\n  let [guestNumber, setGuestNumber] = useState(0);\n  let [actualHints, setActualHints] = useState<feedback[]>([]);\n  let [previousGuests, setPreviousGuests] = useState<string[][]>([]);\n  let [previousHints, setPreviousHints] = useState<feedback[][]>([]);\n  let [showWin, setShowWin] = useState(false)\n  let [showLose, setShowLose] = useState(false)\n\n  const pegButtonClickedHandler = (color: string) => {\n    let localActualGuest = [...actualGuest];\n    if (localActualGuest.length === codeLength) {\n      localActualGuest[codeLength - 1] = color;\n    } else {\n      localActualGuest.push(color);\n    }\n    setActualGuest(localActualGuest);\n  };\n\n  const finishGame = () => {\n    setShowWin(true)\n  };\n\n  const nextTry = (hints: feedback[]) => {\n    setPreviousGuests([...previousGuests, actualGuest]);\n    setPreviousHints([...previousHints, hints]);\n    setActualGuest([]);\n    setActualHints([]);\n    setGuestNumber(guestNumber + 1);\n  };\n\n  const loose = () => {\n    setShowLose(true)\n  };\n\n  const guestOnClickHandler = () => {\n    const hints = GetHints(actualGuest, codeToGuest);\n    setActualHints(hints);\n    if (isWin(hints, codeLength)) {\n      //finish game\n      finishGame();\n    } else if (guestNumber === rowsLength - 1) {\n      // Loose\n      loose();\n    } else {\n      // pass to another try\n      nextTry(hints);\n    }\n  };\n\n  const {\n    generalContainer,\n    container,\n    tableContainer,\n    pegBoxContainer,\n    buttonsContainer,\n    button,\n    playableContainer,\n    textContainer,\n  } = styles;\n  return (\n    <>\n      <div className={textContainer}>\n        <h1>MasterMind</h1>\n        <p>\n          If you don't know how to play, you can{\" \"}\n          <a target=\"blank\" href=\"https://bit.ly/2ZtfXpg\">\n            visit this site\n          </a>{\" \"}\n          for a little explanation about the game.\n        </p>\n      </div>\n      <div className={`${generalContainer}`}>\n        <div className={`${playableContainer}`}>\n          <div className={`${container} ${tableContainer}`}>\n            <Table\n              codeLength={codeLength}\n              rowsLength={rowsLength}\n              guestNumber={guestNumber}\n              actualGuest={actualGuest}\n              actualHints={actualHints}\n              previousGuests={previousGuests}\n              previousHints={previousHints}\n            />\n          </div>\n          <div className={`${container} ${pegBoxContainer}`}>\n            <PegBox pegButtonClicked={pegButtonClickedHandler} />\n          </div>\n        </div>\n        <div className={`${buttonsContainer}`}>\n          <button\n            onClick={guestOnClickHandler}\n            disabled={actualGuest.length !== codeLength}\n            className={`${button}`}\n          >\n            Guest\n          </button>\n        </div>\n      </div>\n      {showWin && <Win />}\n      {showLose && <Lose />}\n    </>\n  );\n};\n\nexport default MasterMind;\n","import React from \"react\";\nimport \"./App.css\";\nimport MasterMind from \"./components/masterMind/MasterMind\";\n\nconst codeLength = 4\nconst rowsLength = 15\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MasterMind codeLength={codeLength} rowsLength={rowsLength}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}